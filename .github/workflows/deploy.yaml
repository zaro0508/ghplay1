name: Call a reusable workflow and use its outputs

on:
  workflow_dispatch:

jobs:
  job1:
    uses: ./.github/workflows/build.yaml

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{ needs.job1.outputs.firstword }} ${{ needs.job1.outputs.secondword }}


#name: deploy
#
#on:
#  push:
#    branches: [ '*' ]
#    tags: [ 'v[0-9]+\.[0-9]+\.[0-9]+' ]
#  pull_request:
#    branches: [ '*' ]
#
##on:
##  push:
##    branches: ["**"]
#
#jobs:
#  MatrixJobA:
#    strategy:
#      matrix:
#        target: [a, b]
#    uses: ./.github/workflows/build.yaml
#    with:
#      target: ${{ matrix.target }}

#  MatrixJobB:
#    needs: MatrixJobA
#    strategy:
#      matrix:
#        target: [c, d]
#    uses: ./.github/workflows/build.yaml
#    with:
#      target: ${{ matrix.target }}

#  parallel:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: true
#      matrix:
#        option:
#          - a
#          - b
#
#    steps:
#      - name: output
#        id: output
#        run: |
#          echo "${{ matrix.option }}=${{ matrix.option }}" >> $GITHUB_OUTPUT
#
#    outputs:
#      a: ${{ steps.output.outputs.a }}
#      b: ${{ steps.output.outputs.b }}
#
#  finally:
#    needs: parallel
#    runs-on: ubuntu-latest
##    if: github.ref == 'refs/heads/main'
#
#    strategy:
#      matrix:
##        option: ${{ needs.parallel.outputs.* }}
#        option:
#          - c
#          - d
#
#    steps:
#      - name: checkout
#        uses: actions/checkout@v3
#
#      - name: debug
#        run: echo '${{ toJSON(needs.parallel.outputs) }}'
